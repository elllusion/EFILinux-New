# This is a basic workflow to help you get started with Actions

name: build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Install compilation dependencies
        run: |
          sudo sed -i "/deb-src/s/# //g" /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y wget xz-utils make gcc flex bison dpkg-dev bc rsync kmod cpio libssl-dev libunwind-dev
          sudo apt-get build-dep -y linux

      - name: Update git submodule
        run: |
          git submodule update --init --recursive
        shell: bash

      - name: Run the chroot script and download the rootfs and kernel configuration files
        run: |
          git submodule update --init --recursive
          sudo bash ${PWD}/chroot.sh
        shell: bash

      - name: Run compile script
        run: |
          sudo bash ${PWD}/build.sh
        shell: bash

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: TODO New Release.
          draft: false
          prerelease: false
 
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./EFILinux.efi
          asset_name: EFILinux.efi
